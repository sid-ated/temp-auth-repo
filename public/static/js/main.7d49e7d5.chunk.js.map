{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/AboutComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/Forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leadersLoading","leadersErrMess","RenderLeader","key","id","tag","left","object","body","right","heading","About","leaders","map","to","active","title","list","RenderMenuItem","width","Menu","menu","dishes","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","TheCommentModal","state","isModalOpen","toggleModal","setState","postComment","dishId","rating","author","comment","outline","onClick","isOpen","toggle","React","RenderDish","SelDish","top","RenderComments","TheComments","commentsection","Intl","DateTimeFormat","year","month","day","format","Date","date","Dishdetail","isLaoding","TheDish","comments","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","feedbacks","feedback","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7d49e7d5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}){\r\n    if(isLoading){\r\n        return(\r\n            <Loading/>\r\n        );\r\n    }\r\n    else if (errMess){\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else \r\n        return(\r\n            <FadeTransform in \r\n                transformProps = {{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                    <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    \r\n}\r\n\r\nfunction Home (props){\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"container\">\r\n                <div className=\"row align-items-start\">\r\n                    <div className=\"col-12 col-md m-1\">\r\n                        <RenderCard item={props.dish} \r\n                        isLoading={props.dishesLoading}\r\n                        errMess={props.dishesErrMess}/>\r\n                    </div>\r\n                    <div className=\"col-12 col-md m-1\">\r\n                        <RenderCard item={props.promotion} \r\n                        isLoading={props.promoLoading} \r\n                        errMess={props.promoErrMess} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md m-1\">\r\n                        <RenderCard item={props.leader}\r\n                        //isLoading = {true}\r\n                        isLoading={props.leadersLoading} \r\n                        errMess={props.leadersErrMess}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeader ({leader, isLoading, errMess}){\r\n    if(isLoading){\r\n        return(\r\n            <Loading/>\r\n        );\r\n    }\r\n    else if (errMess){\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else \r\n        return(\r\n            <div key={leader.id} className=\"col-12 mt-5\">\r\n                <Fade in>\r\n                    <Media tag=\"li\">\r\n                        <Media left>\r\n                            <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                        </Media>\r\n                        <Media body right className=\"ml-5\">\r\n                            <Media heading>\r\n                                {leader.name}\r\n                            </Media>\r\n                            <p>{leader.designation}</p>\r\n                            <p>{leader.description} </p>\r\n                        </Media>\r\n                    </Media>\r\n                </Fade>\r\n            </div>\r\n        );\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.map((leader) => {\r\n        return (\r\n            <div key={leader.id} className=\"row\">\r\n                <Stagger in>\r\n                    <RenderLeader leader={leader} isLoading={props.leadersLoading} errMess={props.leadersErrMess}/>\r\n                </Stagger>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <Media list className=\"row\">\r\n                        {leaders}\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    "," import React from 'react';\r\n import {Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n import { Link } from 'react-router-dom';\r\n import { Loading } from './LoadingComponent';\r\n import { baseUrl } from '../shared/baseUrl';\r\n \r\n    function RenderMenuItem({dish}){\r\n        return(\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`}>\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n\r\n        const menu = props.dishes.dishes.map((dish)=>{\r\n            return (\r\n               <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                   <RenderMenuItem dish ={dish}/>\r\n               </div>\r\n            );\r\n        });\r\n\r\n        if(props.dishes.isLoading){\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess){\r\n            return (\r\n                <div className =\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n            );\r\n    }\r\n\r\n\r\n export default Menu;","import React, {Component} from 'react';\r\nimport {Breadcrumb, BreadcrumbItem, Button, Label, Col, Row} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { Control, Errors, Form,  } from 'react-redux-form';\r\n\r\nconst  required = (val) => val && val.length; \r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        // this.state = {\r\n        //     firstname: '',\r\n        //     lastname: '',\r\n        //     telnum: '',\r\n        //     email: '',\r\n        //     agree: false,\r\n        //     contactType: 'Tel. ',\r\n        //     message: '',\r\n        //     touched:{\r\n        //         firstname: false,\r\n        //         lastname: false,\r\n        //         telnum:false,\r\n        //         email: false\r\n        //     }\r\n        // }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        //this.handleInputChange = this.handleInputChange.bind(this);\r\n        //this.handleBlur = this.handleBlur.bind(this);\r\n    };\r\n\r\n    // handleInputChange(event){\r\n    //     const target = event.target;\r\n    //     const value = target.type ==='checkbox' ? target.checked : target.value;\r\n    //     const name=target.name;\r\n\r\n    //     this.setState({\r\n    //         [name]: value\r\n    //     });\r\n    // }\r\n\r\n    // handleSubmit(event){\r\n    //     console.log(\"Current state is: \"+JSON.stringify(this.state));\r\n    //     alert(\"Current state is: \"+JSON.stringify(this.state));\r\n    //     event.preventDefault();\r\n    // }\r\n\r\n    // handleBlur = (field) => (evt) => {\r\n    //     this.setState ({\r\n    //         touched: {...this.state.touched, [field]: true}\r\n    //     });\r\n    // }\r\n\r\n    // validate(firstname, lastname, telnum, email) {\r\n    //     const errors = {\r\n    //         firstname:'',\r\n    //         lastname:'',\r\n    //         telnum:'',\r\n    //         email:'',\r\n    //     };\r\n\r\n    //     if(this.state.touched.firstname && firstname.length<3)\r\n    //         errors.firstname = 'First Name should be >= 3 characters';\r\n    //     else if (this.state.touched.firstname && firstname.length>10)\r\n    //         errors.firstname = 'First Name should be <=10 characters';\r\n\r\n    //     if(this.state.touched.lastname && lastname.length<3)\r\n    //         errors.lastname = 'First Name should be >= 3 characters';\r\n    //     else if (this.state.touched.lastname && lastname.length>10)\r\n    //         errors.lastname = 'First Name should be <=10 characters';\r\n\r\n    //     const reg = /^\\d+$/;\r\n    //     if(this.state.touched.telnum && !reg.test(telnum))\r\n    //         errors.telnum = 'Tel. number should contain only numbers';\r\n\r\n    //     if(this.state.touched.email && email.split('').filter(x => x==='@').length!==1)\r\n    //         errors.email = 'Email should contain a @ sign';\r\n\r\n    //     return errors;\r\n\r\n    // }\r\n\r\n    handleSubmit(values){\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message)\r\n\r\n        //console.log(\"Current state is: \"+JSON.stringify(values));\r\n        //alert(\"Current state is: \"+JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render(){\r\n        //const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email)\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"/\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" \r\n                                    placeholder=\"First Name\" \r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                    // value={this.state.firstname}\r\n                                    // valid = {errors.firstname === ''}\r\n                                    // invalid = {errors.firstname !== ''}\r\n                                    // onBlur={this.handleBlur('firstname')}\r\n                                    // onChange={this.handleInputChange}\r\n                                    />\r\n                                    {/* <FormFeedback>{errors.firstname}</FormFeedback> */}\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 chars',\r\n                                            maxLength: 'Must be less than 11 chars'\r\n                                        }}\r\n\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" \r\n                                    placeholder=\"Last Name\" \r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                    // value={this.state.lastname}\r\n                                    // valid = {errors.lastname === ''}\r\n                                    // invalid = {errors.lastname !== ''}\r\n                                    // onBlur={this.handleBlur('lastname')}\r\n                                    // onChange={this.handleInputChange}\r\n                                    />\r\n                                    {/* <FormFeedback>{errors.lastname}</FormFeedback> */}\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 chars',\r\n                                            maxLength: 'Must be less than 16 chars'\r\n                                        }}\r\n\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" \r\n                                    placeholder=\"Tel. Number\" \r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                    }}\r\n                                    // value={this.state.telnum}\r\n                                    // valid = {errors.telnum === ''}\r\n                                    // invalid = {errors.telnum !== ''}\r\n                                    // onBlur={this.handleBlur('telnum')}\r\n                                    // onChange={this.handleInputChange}\r\n                                    />\r\n                                    {/* <FormFeedback>{errors.telnum}</FormFeedback> */}\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be less than 15 numbers',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\" \r\n                                    placeholder=\"Email\" \r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, validEmail\r\n                                    }}\r\n                                    // value={this.state.email}\r\n                                    // valid = {errors.email === ''}\r\n                                    // invalid = {errors.email !== ''}\r\n                                    // onBlur={this.handleBlur('email')}\r\n                                    // onChange={this.handleInputChange}\r\n                                    />\r\n                                    {/* <FormFeedback>{errors.email}</FormFeedback> */}\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email'\r\n                                        }}\r\n\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\"> \r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\" \r\n                                            //checked={this.state.agree} \r\n                                            className=\"form-check-input\"\r\n                                            // onChange={this.handleInputChange}\r\n                                            /> {' '}\r\n                                            <strong> May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size:3, offset:1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\" \r\n                                    // value={this.state.contactType} \r\n                                    // onChange={this.handleInputChange}\r\n                                    className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" \r\n                                    name=\"message\" rows=\"12\" placeholder=\"Type...\" \r\n                                    // value={this.state.message}\r\n                                    className=\"form-control\"\r\n                                    // onChange={this.handleInputChange}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport {Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb,BreadcrumbItem,\r\n        Button, Modal, ModalHeader, ModalBody, Label, Row, Col} from 'reactstrap';\r\nimport {Control, LocalForm, Errors} from 'react-redux-form';\r\nimport {Link} from 'react-router-dom';\r\nimport {Loading} from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required= (val)=> val && val.length;\r\nconst minLength= (len)=> (val)=> val && (val.length>=len);\r\nconst maxLength= (len)=> (val)=> !(val) || (val.length<=len);\r\n\r\n class TheCommentModal extends React.Component {\r\n     constructor(props) {\r\n         super(props);\r\n\r\n        this.state={\r\n            isModalOpen:false,\r\n        }\r\n        this.toggleModal=this.toggleModal.bind(this);\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n    };\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen,\r\n        });    \r\n    }\r\n\r\n    handleSubmit(values){\r\n        this.toggleModal();\r\n        this.props.postComment (this.props.dishId, values.rating, values.author, values.comment);\r\n        //console.log(\"Current state is: \"+JSON.stringify(values));\r\n        //alert(\"Current state is: \"+JSON.stringify(values));\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <Button outline onClick={this.toggleModal}>\r\n                <span className=\"fa fa-pencil fa-lg\"></span>Submit Comment\r\n            </Button>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                <ModalBody>\r\n                    <LocalForm onSubmit={(values)=> this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"rating\" md={12}>Rating</Label>\r\n                            <Col md={12}>\r\n                                <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                </Control.select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"author\" md={12}>Your Name</Label>\r\n                            <Col md={12}>\r\n                                <Control.text model=\".author\" name=\"author\" placeholder=\"Your Name\"\r\n                                id=\"author\" className=\"form-control\"\r\n                                validators={{\r\n                                    required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                }}\r\n                                />\r\n                                <Errors className=\"text-danger\" model=\".author\" show=\"touched\"\r\n                                messages={{\r\n                                    required: 'Required ',\r\n                                    minLength: \"Must be greater than 2 characters\",\r\n                                    maxLength: \"Must be 15 characters or less\"\r\n                                }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"comment\" md={12}>Comment</Label>\r\n                            <Col md={12}>\r\n                                <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                rows=\"6\" className=\"form-control\"/>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col md={12}>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                Submit\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </LocalForm>\r\n                </ModalBody>\r\n            </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n    \r\n    function RenderDish({SelDish}){\r\n        return (\r\n            <div key={SelDish.id} className=\"col-12 col-md-5 m-1\">\r\n                <FadeTransform in \r\n                transformProps = {{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                    <Card>\r\n                    <CardImg top src={baseUrl + SelDish.image} alt={SelDish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{SelDish.name}</CardTitle>\r\n                            <CardText>{SelDish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function RenderComments({TheComments, postComment, dishId}){\r\n        const commentsection = TheComments.map(comment=>{\r\n            return(\r\n                <Fade in>\r\n                    <li key = {comment.id}>\r\n                        <p>{comment.comment}</p>\r\n                        <p>-- {comment.author}, {\" \"} \r\n                        {\r\n                            new Intl.DateTimeFormat('en-US', {\r\n                                year: 'numeric',\r\n                                month: 'short',\r\n                                day: '2-digit'\r\n                            }).format(new Date(comment.date))\r\n                        }\r\n                        </p>\r\n                    </li>\r\n                </Fade>\r\n            )\r\n        })\r\n        return(\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    <Stagger in>\r\n                        {commentsection}\r\n                    </Stagger>\r\n                    <TheCommentModal dishId={dishId} postComment={postComment}/>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const Dishdetail = (props) => {\r\n\r\n        if(props.isLaoding) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess){\r\n            return (\r\n                <div className =\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if(props.TheDish!=null)\r\n        {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                                <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                                <BreadcrumbItem active>{props.TheDish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>{props.TheDish.name}</h3>\r\n                            <hr/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <RenderDish SelDish={props.TheDish} />\r\n                        <RenderComments TheComments={props.comments} \r\n                        postComment={props.postComment}\r\n                        dishId={props.TheDish.id}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n\r\nexport default Dishdetail;","import React, {Component} from 'react';\r\nimport {Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Modal, ModalHeader, ModalBody, Form, FormGroup, Button, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        })\r\n    }\r\n\r\n    handleLogin(event){\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \"Password: \" +this.password.value\r\n        + \"Remember: \" + this.remember.checked);\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            //react fragment shortcut\r\n            <>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav}/>\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"./assets/images/logo.png\" height=\"30\" width=\"41\"\r\n                                alt=\"Ristorante Con Fusion\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"></span>\r\n                                        Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <span className=\"fa fa-info fa-lg\"></span>\r\n                                        About Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-list fa-lg\"></span>\r\n                                        Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-address-card fa-lg\"></span>\r\n                                        Contact Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\"></span>Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"cotainer\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6 ml-5\">\r\n                                <h1> Ristorante Con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                innerRef={(input)=>this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                innerRef={(input)=>this.password = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input)=>this.remember = input}/>\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" className=\"bg-primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Footer(props){\r\n    return (\r\n        <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About Us</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment)=> ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n  const newComment = {\r\n      dishId: dishId,\r\n      rating: rating,\r\n      author: author,\r\n      comment: comment\r\n  };\r\n  newComment.date = new Date().toISOString();\r\n  \r\n  return fetch(baseUrl + 'comments', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newComment),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: \"same-origin\"\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(response => dispatch(addComment(response)))\r\n  .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n  dispatch(leadersLoading());\r\n\r\n  return fetch(baseUrl + 'leaders')\r\n  .then(response => {\r\n      if (response.ok) {\r\n          return response;\r\n      } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n      }\r\n    },\r\n    error => {\r\n          var errmess = new Error(error.message);\r\n          throw errmess;\r\n    })\r\n  .then(response => response.json())\r\n  .then(leaders => dispatch(addLeaders(leaders)))\r\n  .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\ntype: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n});\r\n\r\nexport const addFeedback = (feedback)=> ({\r\n  type: ActionTypes.ADD_FEEDBACK,\r\n  payload: feedback\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n\r\nconst newFeedback = {\r\n  firstname: firstname,\r\n  lastname: lastname, \r\n  telnum: telnum, \r\n  email: email, \r\n  agree: agree, \r\n  contactType: contactType, \r\n  message: message\r\n};\r\nnewFeedback.date = new Date().toISOString();\r\n\r\nreturn fetch(baseUrl + 'feedback', {\r\n    method: \"POST\",\r\n    body: JSON.stringify(newFeedback),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    credentials: \"same-origin\"\r\n})\r\n.then(response => {\r\n    if (response.ok) {\r\n      return response;\r\n    } else {\r\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n      error.response = response;\r\n      throw error;\r\n    }\r\n  },\r\n  error => {\r\n        throw error;\r\n  })\r\n.then(response => response.json())\r\n//.then(response => dispatch(addFeedback(response)))\r\n.then(response => alert(\"Thank you for your feedback!\" + JSON.stringify(response)))\r\n.catch(error =>  { console.log('post feedbacks', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\r\n};","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\r\n","import React, {Component} from 'react';\r\nimport Home from './HomeComponent';\r\nimport About from './AboutComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport Dishdetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n      dishes: state.dishes,\r\n      comments: state.comments,\r\n      promotions: state.promotions,\r\n      leaders: state.leaders,\r\n      feedbacks: state.feedback\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders()),\r\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n});\r\n\r\n\r\nclass Main extends Component {\r\n\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render(){\r\n    const HomePage = () =>{\r\n      return(\r\n        <Home \r\n              dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n              dishesLoading={this.props.dishes.isLoading}\r\n              dishErrMess={this.props.dishes.errMess}\r\n              promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n              promoLoading={this.props.promotions.isLoading}\r\n              promoErrMess={this.props.promotions.errMess}\r\n              leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n              leadersLoading={this.props.leaders.isLoading}\r\n              leadersErrMess={this.props.leaders.errMess}\r\n          />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match})=>{\r\n        return(\r\n          <Dishdetail TheDish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n            isLoading={this.props.dishes.isLoading}\r\n            errMess={this.props.dishes.errMess}\r\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n            commentsErrMess={this.props.comments.errMess}\r\n            postComment={this.props.postComment}\r\n          />\r\n        );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header/>\r\n        <TransitionGroup>\r\n          <CSSTransition key = {this.props.location.key} classNames=\"page\" timeout={300}>\r\n            <Switch>\r\n              <Route path=\"/home\" component={HomePage}/>\r\n              <Route exact path =\"/aboutus\" component={() => <About leaders={this.props.leaders.leaders} \r\n                                                          leadersLoading={this.props.leaders.isLoading}\r\n                                                          leadersErrMess={this.props.leaders.errMess} />} />\r\n              <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n              <Route path=\"/menu/:dishId\" component={DishWithId}/>\r\n              <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} \r\n                                                                postFeedback= {this.props.postFeedback}/>} />\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer/> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","// import { DISHES } from '../shared/dishes';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = \r\n    (state = { \r\n        isLoading: true,\r\n        errMess: null,\r\n        leaders:[]}, \r\n        action) => {\r\n        switch (action.type) {\r\n            case ActionTypes.ADD_LEADERS:\r\n                return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n            case ActionTypes.LEADERS_LOADING:\r\n                return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n            case ActionTypes.LEADERS_FAILED:\r\n                return {...state, isLoading: false, errMess: action.payload};\r\n\r\n            default:\r\n                return state;\r\n    }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n}","import React, {Component} from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render(){\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main/>\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './Forms';\r\n\r\n// import { Reducer, initialState } from './reducer';\r\n\r\n// export const ConfigureStore = () => {\r\n//     const store = createStore(\r\n//         Reducer,\r\n//         initialState\r\n//     );\r\n\r\n//     return store;\r\n// };\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}